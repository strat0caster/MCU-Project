C51 COMPILER V9.54   MAIN                                                                  01/09/2016 16:21:13 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #define D_Round 0.2  
   2          #define pi 3.14159265358
   3          #define distance_1 40
   4          #define distance_2 100
   5          #define distance_3 160
   6          #define thres_omega 6553
   7          #define thres_turning 900
   8          #define omega_acc 900 //快速加速阈值 
   9          
  10          #include "lights.h"
  11          
  12          
  13          int code digital_angle[360]={0,0,1,3,5,8,11,15,20,25,31,38,45,53,61,70,79,90,100,
  14            112,124,136,149,163,177,192,207,223,240,257,274,293,311,330,350,370,391,412,434,
  15            456,479,502,526,550,575,600,625,651,678,704,732,759,787,816,844,873,903,933,963,993,
  16            1024,1055,1087,1118,1150,1183,1215,1248,1281,1314,1348,1381,1415,1449,1484,1518,1553,
  17            1587,1622,1657,1692,1728,1763,1798,1834,1870,1905,1941,1977,2012,2048,2084,2119,2155,
  18            2191,2226,2262,2298,2333,2368,2404,2439,2474,2509,2543,2578,2612,2647,2681,2715,2748,
  19            2782,2815,2848,2881,2913,2946,2978,3009,3041,3072,3103,3133,3163,3193,3223,3252,3280,
  20            3309,3337,3364,3392,3418,3445,3471,3496,3521,3546,3570,3594,3617,3640,3662,3684,3705,
  21            3726,3746,3766,3785,3803,3822,3839,3856,3873,3889,3904,3919,3933,3947,3960,3972,3984,
  22            3996,4006,4017,4026,4035,4043,4051,4058,4065,4071,4076,4081,4085,4088,4091,4093,4095,
  23            4096,4096,4096,4097,4099,4101,4104,4107,4111,4116,4121,4127,4134,4141,4148,4157,4166,
  24            4175,4185,4196,4207,4219,4232,4245,4259,4273,4288,4303,4319,4336,4353,4370,4388,4407,
  25            4426,4446,4466,4487,4508,4530,4552,4575,4598,4622,4646,4671,4696,4721,4747,4773,4800,
  26            4827,4855,4883,4911,4940,4969,4998,5028,5058,5089,5120,5151,5182,5214,5246,5278,5311,
  27            5343,5376,5410,5443,5477,5511,5545,5579,5614,5648,5683,5718,5753,5788,5823,5859,5894,
  28            5929,5965,6001,6036,6072,6108,6144,6179,6215,6251,6286,6322,6358,6393,6429,6464,6499,
  29            6534,6569,6604,6639,6674,6708,6742,6776,6810,6844,6877,6911,6944,6977,7009,7041,7073,
  30            7105,7136,7168,7198,7229,7259,7289,7318,7347,7376,7404,7432,7460,7487,7514,7540,7566,
  31            7592,7617,7641,7666,7689,7712,7735,7757,7779,7801,7821,7842,7861,7880,7899,7917,7935,
  32            7952,7968,7984,8000,8015,8029,8043,8056,8068,8080,8092,8102,8112,8122,8131,8139,8147,
  33          8154,8161,8167,8172,8177,8181,8184,8187,8189,8191,8192};
  34          unsigned char counter=0;
  35          int Receive_Buff[11];
  36          int a[3],w[3],Angle[3];
  37          int a1=0,a2=0,a3=0;
  38          int w1=0,w2=0;
  39          float w_turning;
  40          
  41          int Dist=0;
  42          int AngleNew=0;
  43          //double AngleNew=0;
  44          bit dis_flag_1=0,dis_flag_2=0,dis_flag_3=0;
  45          bit Flag=0;
  46          
  47          
  48          int main(){
  49   1        
  50   1        UartInit();
  51   1      
  52   1        while(1){                                          //20ms
  53   2      
  54   2              w_turning=abs(w[0])+abs(w[2]);                            //用于转向判断
C51 COMPILER V9.54   MAIN                                                                  01/09/2016 16:21:13 PAGE 2   

  55   2              if(w_turning>thres_turning) {turning_pattern();}
  56   2              else if(w2-w1>omega_acc)  {speeding_pattern();}//omega_acc为快速加速阈值
  57   2              else if(w1-w2>omega_acc)  {slowing_pattern();}//omega_slow为刹车阈值
  58   2              else if(dis_flag_1){display_distance(1);}
  59   2              else if(dis_flag_2){display_distance(2);}
  60   2              else if(dis_flag_3){display_distance(3);}
  61   2              else{cruise_pattern();}
  62   2              
  63   2              if(Dist==distance_1){dis_flag_1=1;};
  64   2              if(Dist==distance_2){dis_flag_2=1;};
  65   2              if(Dist==distance_3){dis_flag_3=1;};
  66   2          }
  67   1        
  68   1      }
  69          
  70          
  71          void cruise_pattern(){
  72   1          if( AngleNew>digital_angle[0]&&AngleNew<digital_angle[120]){
  73   2                      P0=0x0F;
  74   2                      P1=0xFF;
  75   2              }
  76   1          else if(AngleNew>digital_angle[120]&&AngleNew<digital_angle[240]){
  77   2                      P1=0x0F;
  78   2                      P0=0xFF;
  79   2              }
  80   1          else{
  81   2                  P0=0xFF;
  82   2                  P1=0xFF;
  83   2          }
  84   1      }
  85          
  86          
  87          void UartInit(void)   //115200bps@11.0592MHz
  88          {
  89   1        EA=1;
  90   1        ES=1;
  91   1        SCON = 0x50;
  92   1        RCAP2L = 0xFD;
  93   1        RCAP2H = 0xFF;
  94   1        TL2 = 0xFD;   
  95   1        TH2 = 0xFF;   
  96   1        T2CON=0x34;
  97   1      //以上为T2定时器实现115200波特率
  98   1      }
  99          
 100          
 101          
 102          void ser() interrupt 4
 103          {
 104   1          if(RI)
 105   1          {
 106   2              RI=0;
 107   2              Receive_Buff[counter]=SBUF;
 108   2      
 109   2            if(counter==0&&Receive_Buff[0]!=0x55) return;      //第0号数据不是帧头
 110   2            counter++;
 111   2      
 112   2            if(counter==11)             //接收到11个数据
 113   2              {counter=0;               //重新赋值，准备下一帧数据的接收
 114   3      
 115   3                  switch(Receive_Buff [1])
 116   3                  {
C51 COMPILER V9.54   MAIN                                                                  01/09/2016 16:21:13 PAGE 3   

 117   4                  case 0x51:
 118   4                  a[0]=(Receive_Buff[3]<<8|Receive_Buff[2]);
 119   4      //          a[1]=(Receive_Buff[5]<<8|Receive_Buff[4]);
 120   4                  a1=a2;
 121   4                  a2=a3;
 122   4                  a3=a[0];
 123   4                  AngleNew=a[0]+2048;
 124   4                  //尝试用另一种方法取得角度；详情见下方
 125   4                  if(a1>=a2&&a2<=a3){Flag=0;}//固定点判断
 126   4                  if(a1<=a2&&a2>=a3){Flag=1; 
 127   5                  if(w[1]>thres_omega){Dist++;}//一圈里程加1
 128   5                  }
 129   4      //            if(Flag==1){AngleNew=asin(a[0]/2048.0)*57.3+90;}//利用x轴加速度方向判断方位角
 130   4      //            else{AngleNew=270-asin(a[0]/2048.0)*57.3;}
 131   4      //            asin函数比较花时间，尝试用另一种方法
 132   4                  if(Flag==1){AngleNew=8192-AngleNew;}
 133   4                  
 134   4      //          a[2]=(Receive_Buff[7]<<8|Receive_Buff[6])/32768.0*16;
 135   4                  break;
 136   4                  
 137   4                  case 0x52:
 138   4                  w[0]=(Receive_Buff[3]<<8|Receive_Buff[2]);
 139   4                  w[1]=(Receive_Buff[5]<<8|Receive_Buff[4]);
 140   4                  w[2]=(Receive_Buff[7]<<8|Receive_Buff[6]);
 141   4                  w1=w2;
 142   4                  w2=w[1];
 143   4      //          w=w[i]/32768.0*2000;
 144   4                  break;
 145   4                  case 0x53:
 146   4      //            Angle[0]=(Receive_Buff[3]<<8|Receive_Buff[2]);
 147   4      //            Angle[1]=(Receive_Buff[5]<<8|Receive_Buff[4])/32768.0*180;
 148   4      //            Angle[2]=(Receive_Buff[7]<<8|Receive_Buff[6])/32768.0*180;
 149   4                  break;
 150   4                  default: break;
 151   4                  }
 152   3                }
 153   2      
 154   2          }
 155   1          if(TI){TI=0;}
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    758    ----
   CONSTANT SIZE    =    720    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     59    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
